- name: Check if namespace {{ storage_namespace }} exists
  shell: "{{ cluster_command }} get ns | grep -w {{ storage_namespace }} | awk '{ print $1 }'"
  register: ns

- name: Create {{ storage_namespace }} namespace
  shell: "{{ cluster_command }} create namespace {{ storage_namespace }}"
  when: ns.stdout != storage_namespace

- name: Check for storage-demo serviceaccount
  command: "{{ cluster_command }} get serviceaccount storage-demo -n {{ storage_namespace }}"
  register: user
  failed_when: user.rc > 1

- name: Create storage-demo serviceaccount
  command: "{{ cluster_command }} create serviceaccount storage-demo -n {{ storage_namespace }}"
  when: user.stdout == ""

- name: Grant privileged access to storage-demo serviceaccount
  command: oc adm policy add-scc-to-user privileged system:serviceaccount:{{ storage_namespace }}:storage-demo
  when: platform=="openshift"

- name: Select a target node
  command: "{{ cluster_command }} get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="Hostname")].address}'"
  register: node_hostname
  when: storage_demo_node_hostname is not defined

- name: Set the target node
  set_fact:
    storage_demo_node_hostname: "{{ node_hostname.stdout }}"
  when: storage_demo_node_hostname is not defined

- name: Render storage-demo deployment yaml
  template:
    src: "{{ storage_demo_template_dir }}/storage-demo.yml"
    dest: /tmp/storage-demo.yml

- name: Create storage-demo Resources
  command: "{{ cluster_command }} apply -f /tmp/storage-demo.yml"
