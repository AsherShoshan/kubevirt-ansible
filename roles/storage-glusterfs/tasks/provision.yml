---
- set_fact:
    glusterfs_name_label: "{{ glusterfs_name }}{% if glusterfs_name %}-{% endif %}"

- name: Determine the heketi route
  command: "oc get route -n {{ glusterfs_namespace }} -l heketi={{ glusterfs_name_label }}route -o jsonpath='{.items[0].spec.host}'"
  register: route_cmd
  when:
    - platform == 'openshift'
    - heketi_url is not defined

- set_fact:
    heketi_url: "{{ route_cmd.stdout }}"
  when: route_cmd is defined

- name: Get heketi admin key
  shell: "{{ cluster_command }} get pod -n {{ glusterfs_namespace }} -l heketi={{ glusterfs_name_label }}pod -o jsonpath='{.items[0].spec.containers[0].env[?(@.name==\"HEKETI_ADMIN_KEY\")].value}' | base64 -"
  register: key_cmd
  when: heketi_admin_key is not defined

- set_fact:
    heketi_admin_key: "{{ key_cmd.stdout }}"
  when: heketi_admin_key is not defined

- name: Render storage-glusterfs deployment yaml
  template:
    src: storage-glusterfs.yml.j2
    dest: /tmp/storage-glusterfs.yml

- name: Create storage-glusterfs Resources
  command: "{{ cluster_command }} apply -n {{ glusterfs_namespace }} -f /tmp/storage-glusterfs.yml"
